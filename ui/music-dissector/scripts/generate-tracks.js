#!/usr/bin/env node

/**
 * 利用可能な曲を検出してtracks.tsを生成するスクリプト
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// 音楽データのディレクトリ
const OUTPUT_DIR = path.join(__dirname, '../../../all-in-one/output_test');
const TRACKS_FILE = path.join(__dirname, '../src/lib/tracks.ts');

// 利用可能な曲を検出
function detectTracks() {
  const tracks = [];
  
  try {
    const dirs = fs.readdirSync(OUTPUT_DIR);
    
    for (const dir of dirs) {
      const dirPath = path.join(OUTPUT_DIR, dir);
      const stat = fs.statSync(dirPath);
      
      if (stat.isDirectory()) {
        // music-dissectorディレクトリが存在するか確認
        const musicDissectorPath = path.join(dirPath, 'music-dissector');
        if (fs.existsSync(musicDissectorPath)) {
          // dataディレクトリ内のjson.gzファイルを確認
          const dataPath = path.join(musicDissectorPath, 'data');
          if (fs.existsSync(dataPath)) {
            const files = fs.readdirSync(dataPath);
            const hasJsonGz = files.some(file => file.endsWith('.json.gz'));
            if (hasJsonGz) {
              tracks.push(dir);
            }
          }
        }
      }
    }
  } catch (error) {
    console.error('Error detecting tracks:', error);
  }
  
  return tracks;
}

// tracks.tsファイルを生成
function generateTracksFile(tracks) {
  const content = `// 自動生成されたファイル - 手動で編集しないでください
// Generated by scripts/generate-tracks.js

const tracks = ${JSON.stringify(tracks, null, 2)}

export default tracks
`;
  
  fs.writeFileSync(TRACKS_FILE, content);
  console.log(`✅ Generated ${TRACKS_FILE} with ${tracks.length} tracks`);
  console.log('📋 Tracks:', tracks);
}

// メイン処理
function main() {
  console.log('🔍 Detecting available tracks...');
  const tracks = detectTracks();
  
  if (tracks.length === 0) {
    console.warn('⚠️  No tracks found in', OUTPUT_DIR);
  } else {
    generateTracksFile(tracks);
  }
}

main();
